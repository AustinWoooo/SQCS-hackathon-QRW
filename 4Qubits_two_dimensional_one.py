Adder = QuantumCircuit(4)
Adder.mct([0,1,2],3)
Adder.ccx(0,1,2)
Adder.cx(0,1)
A = Adder.to_gate()
type(A)
AddBlocker = QuantumCircuit(5)
AddBlocker.mct([0,1,2,3],4)
AddBlocker.cx(4,1)
AB = AddBlocker.to_gate() 
type(AB)
DecreaseBlocker = QuantumCircuit(5)
DecreaseBlocker.x(1)
DecreaseBlocker.x(2)
DecreaseBlocker.x(3)
DecreaseBlocker.mct([0,2,3],4)
DecreaseBlocker.x(1)
DecreaseBlocker.x(2)
DecreaseBlocker.x(3)
DecreaseBlocker.cx(4,1)
DecreaseBlocker.cx(4,2)
DB = DecreaseBlocker.to_gate()
type(DB)
Decreaser = QuantumCircuit(4)
Decreaser.cx(0,1)
Decreaser.ccx(0,1,2)
Decreaser.mct([0,1,2],3)
D = Decreaser.to_gate()
type(D)
q = QuantumRegister(11)
c = ClassicalRegister(6)
qc = QuantumCircuit(q, c)
qc.x(3)
qc.x(8)
for i in range(10):
    qc.rx(pi/2,q[0])
    qc.rx(pi/2,q[5])
    qc.rx(pi/2,q[10])
    qc.h(10)
    qc.ch(10,0)
    qc.append(AB,[0,1,2,3,4])
    qc.reset(4)
    qc.append(A,[0,1,2,3])
    qc.cx(10,0)
    qc.x(10)
    qc.ch(10,5)
    qc.append(DB,[0,1,2,3,4])
    qc.reset(4)
    qc.append(D,[0,1,2,3])
    qc.reset(0)
    qc.append(AB,[5,6,7,8,9])
    qc.reset(9)
    qc.append(A,[5,6,7,8])
    qc.cx(10,5)
    qc.append(DB,[5,6,7,8,9])
    qc.reset(9)
    qc.append(D,[5,6,7,8])
    qc.reset(5)
    qc.reset(10)
qc.barrier()
qc.measure(q[1],c[0])
qc.measure(q[2],c[1])
qc.measure(q[3],c[2])
qc.measure(q[6],c[3])
qc.measure(q[7],c[4])
qc.measure(q[8],c[5])
qc.draw('mpl')
